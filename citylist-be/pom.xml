<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

  <parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.0.5</version>
		<relativePath/>
	</parent>

  <groupId>com.kuehnenagel</groupId>
	<artifactId>citylist</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>citylist</name>
	<description>Abstract cities list test task implementation for Kuehne &amp; Nagel</description>

  <properties>
    <!-- Build encoding -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- Programming language -->
    <java.version>17</java.version>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>

    <!-- Mapping frameworks -->
    <mapstruct.version>1.5.3.Final</mapstruct.version>

    <!-- Boilerplate code generator  -->
    <lombok.mapstruct.version>0.2.0</lombok.mapstruct.version>
    <lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>

    <!-- Persistence layer -->
    <liquibase.version>4.17.1</liquibase.version>

    <!-- Test libraries -->
    <testcontainers.version>1.16.0</testcontainers.version>
    <testcontainer.postgresql.version>1.17.6</testcontainer.postgresql.version>
    <testcontainers-bom.version>1.17.2</testcontainers-bom.version>
    <junit.jupiter.version>1.16.3</junit.jupiter.version>

    <!-- Dockerfile Configuration -->
    <docker.image.name>citylist</docker.image.name>
    <docker.java.home.dir>/usr/kuehnenagel/</docker.java.home.dir>

    <!-- Java collections utility service -->
    <guava.version>31.1-jre</guava.version>

    <!-- Apache Support libraries -->
    <commons-validator.version>1.7</commons-validator.version>

    <!-- 3d-party Maven Plugins -->
    <docker-maven-plugin.version>0.40.2</docker-maven-plugin.version>
    <spring-boot-maven-plugin.version>2.7.5</spring-boot-maven-plugin.version>
	</properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>testcontainers-bom</artifactId>
        <version>${testcontainers-bom.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

	<dependencies>
    <!-- Application framework -->
    <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <!-- Security -->
    <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

    <!-- Persistence layer -->
    <dependency>
      <groupId>org.liquibase</groupId>
      <artifactId>liquibase-core</artifactId>
      <version>${liquibase.version}</version>
    </dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>


    <!-- Java collections utility service -->
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guava.version}</version>
    </dependency>

    <!-- Mapping frameworks -->
    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct</artifactId>
      <version>${mapstruct.version}</version>
    </dependency>

    <!-- Boilerplate code generators -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>
    <!-- This is needed when using Lombok 1.18.16 and above -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok-mapstruct-binding</artifactId>
      <version>${lombok-mapstruct-binding.version}</version>
    </dependency>

    <!-- Apache Support libraries -->
    <dependency>
      <groupId>commons-validator</groupId>
      <artifactId>commons-validator</artifactId>
      <version>${commons-validator.version}</version>
    </dependency>
    <!-- Swagger api library -->
    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
      <version>2.0.0</version>
   </dependency>

    <!-- Test libraries -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>testcontainers</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <version>${testcontainer.postgresql.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
        <version>${spring-boot-maven-plugin.version}</version>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>17</source>
          <target>17</target>
          <annotationProcessorPaths>
            <path>
              <groupId>org.mapstruct</groupId>
              <artifactId>mapstruct-processor</artifactId>
              <version>${mapstruct.version}</version>
            </path>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok-mapstruct-binding</artifactId>
              <version>${lombok.mapstruct.version}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>${docker-maven-plugin.version}</version>
        <configuration>
          <skipPush>true</skipPush>
          <images>
            <image>
              <name>${docker.image.name}</name>
              <build>
                <dockerFile>Dockerfile</dockerFile>
                <assembly>
                  <name>assets</name>
                  <inline xmlns="http://maven.apache.org/ASSEMBLY/2.0.0"
                          xsi:schemaLocation="http://maven.apache.org/ASSEMBLY/2.0.0 http://maven.apache.org/xsd/assembly-2.0.0.xsd">
                    <includeBaseDirectory>false</includeBaseDirectory>
                    <files>
                      <file>
                        <source>${project.build.directory}/${project.artifactId}-${project.version}.jar</source>
                        <outputDirectory>${docker.java.home.dir}</outputDirectory>
                      </file>
                    </files>
                  </inline>
                </assembly>
                <tags>
                  <tag>latest</tag>
                </tags>
              </build>
            </image>
          </images>
        </configuration>
        <executions>
          <execution>
            <id>prepare-docker-image-src</id>
            <goals>
              <goal>source</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
		</plugins>
	</build>

</project>
